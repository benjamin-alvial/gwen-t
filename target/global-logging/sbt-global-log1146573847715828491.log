[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.1 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 414.186615ms
[debug]       Load.loadUnit: defsScala took 0.680512ms
[debug] [Loading] Scanning directory /Users/benjaminalvial/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/benjaminalvial/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 80.887721 ms
[debug]           Load.resolveProject(global-plugins) took 285.091969ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/benjaminalvial/.sbt/1.0/plugins, plugins: List(<none>))) took 537.757903ms
[debug] [Loading] Done in /Users/benjaminalvial/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 641.846289ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.512338ms
[debug]     Load.loadUnit(file:/Users/benjaminalvial/.sbt/1.0/plugins/, ...) took 1111.979595ms
[debug]   Load.apply: load took 7273.325978ms
[debug]   Load.apply: resolveProjects took 24.174646ms
[debug]   Load.apply: finalTransforms took 212.971073ms
[debug]   Load.apply: config.delegates took 20.725981ms
[debug]   Load.apply: Def.make(settings)... took 1275.022824ms
[debug]   Load.apply: structureIndex took 329.033133ms
[debug]   Load.apply: mkStreams took 2.826862ms
[info] loading global plugins from /Users/benjaminalvial/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 17620.191508ms
[debug]           Load.loadUnit: plugins took 37.830812ms
[debug]           Load.loadUnit: defsScala took 0.007166ms
[debug] [Loading] Scanning directory /Users/benjaminalvial/Desktop/Metodologías/gwen-t-benjamin-alvial/project
[debug]             Load.loadUnit: mkEval took 13.711443ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/benjaminalvial/Desktop/Metodologías/gwen-t-benjamin-alvial/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.373754 ms
[info] loading settings for project gwen-t-benjamin-alvial-build from plugins.sbt ...
[debug]               Load.resolveProject(gwen-t-benjamin-alvial-build) took 8.196727ms
[debug]             Load.loadTransitive: finalizeProject(Project(id gwen-t-benjamin-alvial-build, base: /Users/benjaminalvial/Desktop/Metodologías/gwen-t-benjamin-alvial/project, plugins: List(<none>))) took 16.725732ms
[debug] [Loading] Done in /Users/benjaminalvial/Desktop/Metodologías/gwen-t-benjamin-alvial/project, returning: (gwen-t-benjamin-alvial-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 322.987838ms
[debug]           Load.loadUnit: cleanEvalClasses took 18.12225ms
[debug]         Load.loadUnit(file:/Users/benjaminalvial/Desktop/Metodologías/gwen-t-benjamin-alvial/project/, ...) took 380.748381ms
[debug]       Load.apply: load took 384.88175ms
[debug]       Load.apply: resolveProjects took 0.319962ms
[debug]       Load.apply: finalTransforms took 201.97725ms
[debug]       Load.apply: config.delegates took 2.36757ms
[debug]       Load.apply: Def.make(settings)... took 355.979771ms
[debug]       Load.apply: structureIndex took 242.54025ms
[debug]       Load.apply: mkStreams took 0.003922ms
[info] loading project definition from /Users/benjaminalvial/Desktop/Metodologías/gwen-t-benjamin-alvial/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4230.255693ms
[debug]     Load.loadUnit: defsScala took 0.015104ms
[debug] [Loading] Scanning directory /Users/benjaminalvial/Desktop/Metodologías/gwen-t-benjamin-alvial
[debug]       Load.loadUnit: mkEval took 0.577173ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.625989 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 1.98055ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /Users/benjaminalvial/Desktop/Metodologías/gwen-t-benjamin-alvial, plugins: List(<none>))) took 7.669112ms
[debug] [Loading] Done in /Users/benjaminalvial/Desktop/Metodologías/gwen-t-benjamin-alvial, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 6734.076254ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.889266ms
[debug]   Load.loadUnit(file:/Users/benjaminalvial/Desktop/Metodologías/gwen-t-benjamin-alvial/, ...) took 10969.332102ms
[debug] Load.apply: load took 10973.09833ms
[debug] Load.apply: resolveProjects took 0.131251ms
[debug] Load.apply: finalTransforms took 35.667881ms
[debug] Load.apply: config.delegates took 0.651502ms
[debug] Load.apply: Def.make(settings)... took 175.052975ms
[debug] Load.apply: structureIndex took 65.59094ms
[debug] Load.apply: mkStreams took 0.003488ms
[info] set current project to gwent (in build file:/Users/benjaminalvial/Desktop/Metodologías/gwen-t-benjamin-alvial/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * root / idePackagePrefix
[warn]   +- /Users/benjaminalvial/Desktop/Metodologías/gwen-t-benjamin-alvial/build.sbt:8
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/benjaminalvial/.sbt/1.0/server/3b4a17bfd8a38adab07c/sock
[debug] Writing bsp connection file
[info] started sbt server
